interface IA {
    public func methodA() -> void;
}

interface IB : IA {
    public func methodB() -> void;
}

interface IC : IA {
    public func methodC() -> void;
}

interface ID : IB, IC {
    public func methodD() -> void;
}

class BaseClass {
    public var base_member: int;
    public func base_method() -> void {}
}

class ConcreteImpl(BaseClass) : ID {
    public func methodA() -> void {}
    public func methodB() -> void {}
    public func methodC() -> void {}
    public func methodD() -> void {}

    public var derived_member: int;
    public func base_method() -> void {}
    public func other_method() -> void {}
}
